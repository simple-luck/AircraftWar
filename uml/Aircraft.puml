@startuml
'https://plantuml.com/sequence-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean
    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}

abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + direction:int
    - strategy:Strategy
    + setStrategy(Strategy strategy):void
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }

class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    + strategy:Strategy
    - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    - {static}hero:HeroAircraft
    + {static}GetHeroAircraft():HeroAircraft
    + forward():void
    + shoot():List<BaseBullet>
    + add_blood():void
}



abstract class AbstractEnemy{
    + AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}


class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}

class EliteEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}

class ElitePlusEnemy{
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + update():void
}
class BossEnemy{
    + {static}count:int
    - maxHp:int
    - boss_music:LoopPlayer
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp,boolean hasMusic)
    + getBoss_music():void
    + update():void
}
AbstractAircraft <|-- HeroAircraft
AbstractAircraft--|>AbstractFlyingObject
AbstractEnemy--|>AbstractAircraft
AbstractEnemy <|-- MobEnemy
AbstractEnemy <|-- EliteEnemy
AbstractEnemy <|-- ElitePlusEnemy
AbstractEnemy <|-- BossEnemy

@enduml